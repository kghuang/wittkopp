getwd()
library(tidyverse)  # load the tidyverse package
DATA = read_csv("C:/Users/moonl/Downloads/hw1_data.csv")
View(DATA)
geom_histogram(DATA)
geom_histogram(data = DATA, aes(y=var1)
histo <- ggplot(DATA, aes(y=var1)) +
geom_histogram()
histo
ggplot(DATA, aes(y=var1)) +
geom_histogram()
ggplot(DATA, aes(x=var1)) +
geom_histogram()
ggplot(DATA, aes(x=var2)) +
geom_histogram()
ggplot(DATA, aes(x=var1)) +
geom_boxplot()
ggplot(DATA, aes(x=var2)) +
geom_boxplot()
mean(DATA$var1)
sd(DATA$var1)
quartile(DATA$var2)
median(DATA$var2)
quantile(DATA$var2)
quantile(DATA$var2, 0.25)
z=0.43
pnorm(z)
z=1.09
pnorm(z)
z=-.31
pnorm(z)
qnorm(0.05, mean= 4313, sd=583)
qnorm(.9, mean = 5621, sd = 807)
qnorm(p=.815, mean=0, sd=1)
se <- round(8.887/sqrt(200), 3)
tdf <- round(-.545/se, 3)
p <- round(2*pt(tdf, 199), 3)
z <- 0.816
2*pnorm(z)
pnorm(z)
z <- 1.96
n <- 1578
p <- 0.61
se <- sqrt(p*(1-p)/n)
up <- p + z*se
low <- p - z*se
library(stats)
r<-c(264,38,16,318)
d<-c(299,55,15,369)
i<-c(351,77,22,450)
tot<-c(914,170,53,1137)
data<-cbind(r,d,i,tot)
chisq.test(data[1:3,1:3])
k <- 5
df <- k-1
dep <- 2607/50739
cell <- dep * 6
contrib <- (373-cell)^2/cell
k <- 5
df <- k-1
dep <- 2607/50739
cell <- dep * 6617
contrib <- (373-cell)^2/cell
p <- pchisq(20.93, df=df, lower.tail=FALSE)
r=c(264,38,16)
d=c(299,55,15)
i=c(351,77,22)
data=cbind(r,d,i)
chisq.test(data)
library(tidyverse)
devtools::install_github('nstrayer/network3d')
library(cli)
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(cli)
install.packages("cli")
install.packages("cli")
install.packages("cli")
remove.packages("cli", lib="~/R/win-library/4.0")
install.packages('cli')
install.packages("cli")
install.packages("cli")
rpois(10000,36)
pois <- rpois(10000,36)
mean(pois)
var(pois)
hist(pois)
odpois <- rnbinom(n=10000,size=20,mu=36)
mean(odpois)
var(odpois)
hist(odpois)
shiny::runApp('cmplxsys425/network.evolution')
runApp()
library(tidyverse)
library(stringr)
setwd("C:/Users/moonl/Documents/Wittkopp Lab/networks")
cer267 <- read.table("./cer_267.txt", sep="\t")
par.both <- read.table("./par_264_268.txt", sep="\t")
sacgenes <- read.table("./sacgenes.tsv", header=TRUE, sep="\t")
newgenes <- matrix(ncol=1, nrow=7417)
for (i in 1:nrow(cer267)) {
newgenes[i] <- unlist(str_extract_all(cer267[i,4], "Parent=.+?;"))
}
newgenes <- as.data.frame(newgenes)
newgenes2 <- matrix(ncol=1, nrow=7417)
for (j in 1:nrow(newgenes)) {
newgenes2[j] <- unlist(str_extract_all(newgenes[j,1], "Scer.+?;"))
}
newgenes2 <- as.data.frame(newgenes2)
str_sub(newgenes2[1,1],1,nchar(newgenes2[1,1])-1)
i <- 0
for (i in 1:nrow(cer267)) {
cer267[i,4] <- str_sub(newgenes2[i,1],1,nchar(newgenes2[i,1])-1)
}
k <- 0
for (k in 1:nrow(par.both)) {
par.both[k,4] <- substring(par.both[k,4], 8)
}
rm(newgenes)
rm(newgenes2)
cer267 <- cer267 %>%
rename(Scer_Name=V4,sc267=V5)
par.both <- par.both %>%
rename(Spar_Name=V4,sp268=V6)
##########################################################################
sacgenes <- left_join(sacgenes, cer267, by = "Scer_Name", copy=TRUE)
sacgenes <- sacgenes %>%
select(-c(Scer_Gene, V1, V2, V3))
sacgenes <- left_join(sacgenes, par.both, by="Spar_Name", copy=TRUE)
sacgenes <- sacgenes %>%
select(-c(V1, V2, V3, V5))
sacgenes <- sacgenes %>%
select(-Spar_Name)
sacgenes <- na.omit(sacgenes)
sacgenesY <- read.table("./sacgenes.tsv", header=TRUE, sep="\t")
sacgenes <- left_join(sacgenes, sacgenesY, by = "Scer_Name", copy=TRUE)
sacgenes <- sacgenes %>%
select(-c(Spar_Name, Scer_Name))
##########################################################################
cpm_genes <- as.data.frame(sacgenes$sc267*1000000/44099617)
cpm_genes <- cpm_genes %>%
rename(sc267='sacgenes$sc267 * 1e+06/44099617')
cpm_genes$sp268 <- sacgenes$sp268*1000000/47740035
cpm_genes$Name <- sacgenes$Scer_Gene
##########################################################################
pvalsPar1 <- NULL;
pvalsPar2 <- NULL;
cpm_genes$sc267 <- round(cpm_genes$sc267, digits = 0)
cpm_genes$sp268 <- round(cpm_genes$sp268, digits = 0)
#write.table(cpm_genes, "./cpm_genes.tsv", sep = "\t")
cpm_genes[cpm_genes==0] <- NA
cpm_genes <- na.omit(cpm_genes)
for (i in 1:nrow(cpm_genes)) {
Par1_Bi <- binom.test(cpm_genes[[i,1]], (cpm_genes[[i,1]]+cpm_genes[[i,2]]), p = 0.5, alternative = c("t"), conf.level = 0.95);
# collect p-values from binomial tests
pvalsPar1 <- rbind(pvalsPar1,Par1_Bi$p.value);
}
pvalsPar1.adj <- p.adjust(pvalsPar1,method="fdr");
cpm_genes <- cbind(cpm_genes,pvalsPar1.adj)
ggplot(cpm_genes, aes(x=pvalsPar1.adj)) + geom_histogram() + xlab("p-values") + ggtitle("Distribution of p-values from Binomial Test")
##########################################################################
network <- read.table(file = './SuppNetwork1.tsv', sep = '\t', header=TRUE)
network <- abs(network)
cpm_genes$DiffYN <- ""
for (i in 1:nrow(cpm_genes)) {
if (cpm_genes$pvalsPar1.adj[i] < 0.05) {
cpm_genes$DiffYN[i] <- "Yes"
}
else {
cpm_genes$DiffYN[i] <- "No"
}
}
network$Name <- rownames(network)
network <- left_join(network, cpm_genes, by="Name")
network <- na.omit(network)
network <- unique(network)
write_tsv(network, "./new_network_out.tsv")
net.out.ratio <- read.table(file="./new_out_results.csv", sep=',')
net.out.ratio <- as.data.frame(t(net.out.ratio))
net.out.ratio <- net.out.ratio %>%
rename(Name=V1, ratio=V2)
net.out.ratio <- left_join(net.out.ratio, cpm_genes, by="Name")
net.out.ratio <- net.out.ratio %>%
na.omit() %>%
unique()
net.out.ratio <- as.data.frame(net.out.ratio)
net.out.ratio$ratio <- as.numeric(net.out.ratio$ratio)
ggplot(net.out.ratio, aes(x=DiffYN, y=ratio)) + geom_boxplot()+ xlab("Expression Differences") +
ylab("Proportion of regulators changing expression") + ggtitle("cer-par expression differences vs. proportion of regulators ")+
stat_summary(fun.y=mean, geom="point", shape=20, size=14, color="red", fill="red")
net.out.ratio %>%
group_by(DiffYN) %>%
tally()
net.yes <- net.out.ratio %>%
filter(DiffYN=="Yes")
mean(net.yes$ratio)
net.no <- net.out.ratio %>%
filter(DiffYN=="No")
mean(net.no$ratio)
wilcox.test(net.yes$ratio, net.no$ratio)
net.yes %>%
filter(ratio==0.5) %>%
tally()
net.no %>%
filter(ratio==0.5) %>%
tally()
sums <- colSums(network[,1:198])
sums <- as.data.frame(t(sums))
sums %>%
group_by(V1) %>%
tally()
ggplot(net.out.ratio, aes(x=ratio, y=abs(log2(sc267/sp268)))) + geom_point()
library(tidyverse)
library(ggplot2)
library(sna)
library(igraph)
setwd("C:/Users/moonl/Documents/Wittkopp Lab/networks/bigtable")
# read in all the data to make "bigtable" TM
tau <- read_csv("C:/Users/moonl/Documents/Wittkopp Lab/Tissue_environment_specificity_X_perc_cis/Yeast_data/Gresham/scRNA_tau_env.csv")
dnds <- read.table("./dn_ds_cer_par.txt", sep='\t', header=TRUE)
ppi <- read.table("./yeast_PPI_bipart.txt", sep='\t', header=FALSE)
network <-  read.table("../SuppNetwork1.tsv", sep = '\t', header=TRUE)
exp <- read.table("../cpm_genes.tsv", sep='\t', header=TRUE)
# create big table to fill with all data
bigtable <- as.data.frame(matrix(nrow=198))
# bigtable add name and outdegree: (start with 198)
network <- as.data.frame(t(abs(network)))
network$sums <- rowSums(network)
network$Name <- rownames(network)
bigtable$Name <- network$Name
bigtable$Outdegree <- network$sums
bigtable <- bigtable %>%
select(!V1)
# bigtable add tau: (198 remain after joining)
tau$sd <- 0
for (i in 1:nrow(tau)) {
tau$sd[i] <- sd(tau[i,2:12])
}
bigtable <- left_join(bigtable, tau[,c("Name","tau", "sd")], by="Name")
bigtable <- bigtable %>%
na.omit() %>%
unique()
# bigtable add exp: (181 remain after joining)
bigtable <- left_join(bigtable, exp[,c("Name","sc267")], by="Name")
bigtable <- left_join(bigtable, exp[,c("Name","sp268")], by="Name")
bigtable$expdiv <- abs(log2(bigtable$sc267/bigtable$sp268))
ggplot(bigtable, aes(x=sc267, y=tau)) + geom_point()
ggplot(bigtable, aes(x=sc267, y=sd)) + geom_point()
# bigtable add ppi: (66 remain after joining)
ppi <- as.data.frame(table(ppi$V1))
ppi <- ppi %>%
rename(Name=Var1)
bigtable <- left_join(bigtable, ppi, by="Name")
#bigtable add dn/ds: (153 remain after joining)
dnds <- dnds %>%
rename(Name=ORF.code)
bigtable <- left_join(bigtable, dnds[,c("Name", "dN.dS")], by="Name")
#
bigtable <- bigtable %>%
na.omit() %>%
unique()
###########################################################################
# create tau bins by thirds
bigtable$tau.thirds <- 0
for (i in 1:nrow(bigtable)) {
if (bigtable$tau[i] < 0.33) {
bigtable$tau.thirds[i] <- 1
}
else if (0.33 <= bigtable$tau[i] & bigtable$tau[i] <0.66) {
bigtable$tau.thirds[i] <- 2
}
else {
bigtable$tau.thirds[i] <- 3
}
}
bigtable %>%
group_by(tau.thirds) %>%
tally()
# order elements of row by ascending order
for (i in 1:nrow(tau)) {
tau[i,2:12] <- sort(as.data.frame(tau[i,2:12]))
}
tf_tau <- left_join(tau, bigtable[,c("Name", "tau.thirds")], by="Name")
tf_tau <- tf_tau %>%
na.omit() %>%
unique()
tf_tau %>%
pivot_longer(cols=2:12, names_to = "indicators", values_to = "values") %>%
ggplot(data=.,aes(x=indicators, y=log(values+0.00001))) + geom_boxplot() +
stat_summary(fun.y=mean, geom="point", shape=20, size=4, color="red", fill="red")+ facet_grid(rows=vars(tau.thirds))+
ylim(-2.5,5)
# plots
## tau vs dnds
ggplot(bigtable, aes(x=tau, y=dN.dS)) + geom_point() + geom_smooth(method=loess)
## tau vs exp
ggplot(bigtable, aes(x=tau, y=expdiv)) + geom_point() + geom_smooth(method=loess)
##  outdegree vs dnds
ggplot(bigtable, aes(x=log(Outdegree+1), y=dN.dS)) + geom_point() + geom_smooth(method=loess)
## outdegree vs exp
ggplot(bigtable, aes(x=log(Outdegree+1), y=expdiv)) + geom_point() + geom_smooth(method=lm)
####################### multivariate regression
bigtable <- bigtable %>%
filter_if(~is.numeric(.), all_vars(!is.infinite(.)))
multi.fit<-lm(cbind(expdiv, dN.dS) ~ Outdegree + tau, data=bigtable)
summary(multi.fit)
############## betweenness
edgelist <- as.character(matrix(data=NA,ncol=2))
for (i in 1:nrow(network)) {
for (j in 1:(ncol(network)-2)) {
if (network[i,j]==1) {
edgelist <- rbind(edgelist, c(rownames(network)[i], colnames(network)[j]))
}
}
}
edgelist <- edgelist[2:nrow(edgelist),]
rownames(edgelist) <- c(1:1634)
graph <- graph_from_edgelist(edgelist, directed=TRUE)
btwn <- as.data.frame(betweenness(graph))
colnames(btwn) <- "Betweenness"
btwn$Name <- rownames(btwn)
btwn <- left_join(btwn, network, by="Name")
btwn <- btwn %>%
na.omit() %>%
unique()
btwn <- btwn[,1:2]
rownames(btwn) <- btwn$Name
ggplot(btwn, aes(x=Betweenness)) + geom_bar()
btwn %>%
group_by(Betweenness) %>%
tally()
# append btwn to bigtable
bigtable <- left_join(bigtable, btwn, by="Name")
bigtable <- bigtable %>%
na.omit() %>%
unique()
#closeness
components <- components(graph)
components$no
library(tidyverse)
library(ggplot2)
library(sna)
library(igraph)
setwd("C:/Users/moonl/Documents/Wittkopp Lab/networks/bigtable")
# read in all the data to make "bigtable" TM
tau <- read_csv("C:/Users/moonl/Documents/Wittkopp Lab/Tissue_environment_specificity_X_perc_cis/Yeast_data/Gresham/scRNA_tau_env.csv")
dnds <- read.table("./dn_ds_cer_par.txt", sep='\t', header=TRUE)
ppi <- read.table("./yeast_PPI_bipart.txt", sep='\t', header=FALSE)
network <-  read.table("../SuppNetwork1.tsv", sep = '\t', header=TRUE)
exp <- read.table("../cpm_genes.tsv", sep='\t', header=TRUE)
# create big table to fill with all data
bigtable <- as.data.frame(matrix(nrow=198))
# bigtable add name and outdegree: (start with 198)
network <- as.data.frame(t(abs(network)))
network$sums <- rowSums(network)
network$Name <- rownames(network)
bigtable$Name <- network$Name
bigtable$Outdegree <- network$sums
bigtable <- bigtable %>%
select(!V1)
# bigtable add tau: (198 remain after joining)
tau$sd <- 0
for (i in 1:nrow(tau)) {
tau$sd[i] <- sd(tau[i,2:12])
}
bigtable <- left_join(bigtable, tau[,c("Name","tau", "sd")], by="Name")
bigtable <- bigtable %>%
na.omit() %>%
unique()
# bigtable add exp: (181 remain after joining)
bigtable <- left_join(bigtable, exp[,c("Name","sc267")], by="Name")
bigtable <- left_join(bigtable, exp[,c("Name","sp268")], by="Name")
bigtable$expdiv <- abs(log2(bigtable$sc267/bigtable$sp268))
ggplot(bigtable, aes(x=sc267, y=tau)) + geom_point()
ggplot(bigtable, aes(x=sc267, y=sd)) + geom_point()
dnds <- dnds %>%
rename(Name=ORF.code)
bigtable <- left_join(bigtable, dnds[,c("Name", "dN.dS")], by="Name")
#
bigtable <- bigtable %>%
na.omit() %>%
unique()
##############
View(bigtable)
edgelist <- as.character(matrix(data=NA,ncol=2))
for (i in 1:nrow(network)) {
for (j in 1:(ncol(network)-2)) {
if (network[i,j]==1) {
edgelist <- rbind(edgelist, c(rownames(network)[i], colnames(network)[j]))
}
}
}
edgelist <- edgelist[2:nrow(edgelist),]
rownames(edgelist) <- c(1:1634)
graph <- graph_from_edgelist(edgelist, directed=TRUE)
btwn <- as.data.frame(betweenness(graph))
colnames(btwn) <- "Betweenness"
btwn$Name <- rownames(btwn)
btwn <- left_join(btwn, network, by="Name")
btwn <- btwn %>%
na.omit() %>%
unique()
btwn <- btwn[,1:2]
rownames(btwn) <- btwn$Name
ggplot(btwn, aes(x=Betweenness)) + geom_bar()
btwn %>%
group_by(Betweenness) %>%
tally()
# append btwn to bigtable
bigtable <- left_join(bigtable, btwn, by="Name")
bigtable <- bigtable %>%
na.omit() %>%
unique()
#closeness
components <- components(graph)
components$no
